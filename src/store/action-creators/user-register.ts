import {AppDispatch} from "../store";import {createUserWithEmailAndPassword, getAuth} from "firebase/auth";import {app} from "../../firebase";import {userRegister, userRegisterError, userRegisterSuccess} from "../reducers/auth-slice";import {IUser} from "../../models/IUser";import {User} from '@firebase/auth-types';const auth = getAuth(app)type registerAction = (userData: IUser) => AppDispatchexport const registerUser: registerAction = (userData) => async (dispatch: AppDispatch) => {  try {    dispatch(userRegister(userData))    const {user}: User = await createUserWithEmailAndPassword(auth, userData.email, userData.password)    dispatch(userRegisterSuccess(user.accessToken))  } catch (err) {    dispatch(userRegisterError(err.message))  }}