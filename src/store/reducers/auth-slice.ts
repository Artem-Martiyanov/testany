import {createSlice, PayloadAction, Slice} from '@reduxjs/toolkit';import {IUser} from "../../models/IUser";interface AuthState {  role: 'root' | 'user' | null,  isAuth: boolean,  token: string | null,  user: IUser,  error: string | null}const initialState: AuthState = {  role: null,  isAuth: false,  token: null,  error: null,  user: {    email: '',    name: '',    password: ''  },};export const authSlice: Slice<AuthState> = createSlice({  name: 'auth',  initialState,  reducers: {    userLogin: (state, action: PayloadAction<IUser>) => {            },        userRegister: (state, action: PayloadAction<IUser>) => {      state.user = action.payload    },        userRegisterSuccess: (state, action: PayloadAction<string>) => {      state.isAuth = true      state.error = null      state.token = action.payload    },        userRegisterError: (state, action: PayloadAction<string>) => {      state.isAuth = false      state.error = action.payload      state.token = null    }  },});export const {  userRegister,  userRegisterSuccess,  userRegisterError,} = authSlice.actions;